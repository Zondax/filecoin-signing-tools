name: "Publish packages"

on:
  release:
    types:
      - created
    tags:
      - "v[0-9]+(\\.[0-9]+)*"

jobs:
  configure:
    runs-on: ubuntu-latest
    outputs:
      datetime: ${{ steps.get-datetime.outputs.datetime }}
    steps:
      - id: get-datetime
        run: echo "::set-output name=datetime::$(date +'%Y%m%d%H%M%S')"

  build:
    needs: [ configure ]
    container:
      image: zondax/rust-ci:latest
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: true
      - name: Restore/Save sscache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cache/sccache
          key: ${{ runner.os }}-${{ github.run_id }}-${{ needs.configure.outputs.datetime }}
      - run: apt-get update -y && apt-get install -y libusb-1.0.0 libudev-dev
      - name: rustfmt
        run: |
          cargo fmt --version
          cargo fmt -- --check
      - name: clippy
        run: |
          cargo clippy --version
          cargo clippy --all-features --all-targets
      #- name: audit
      #  run: |
      #    cargo audit --version

  publish_npm_package:
    needs: [ build ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: true
      - name: Restore/Save sscache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cache/sccache
          key: ${{ runner.os }}-${{ github.run_id }}-${{ needs.configure.outputs.datetime }}
      - name: Install node
        uses: actions/setup-node@v2
        with:
          node-version: '16.16.0'
          registry-url: "https://registry.npmjs.org"
          scope: "@zondax"
      - name: Install yarn
        run: npm install -g yarn
      - run: make install_wasmpack SILENT=true
      - run: make build_npm
      - name: Get latest release version number
        id: get_version
        uses: battila7/get-version-action@v2
      - name: Update tag
        run: |
          cd signer-npm/pkg
          echo Publishing as ${{ steps.get_version.outputs.version }}
          npm --allow-same-version --no-git-tag-version version ${{ steps.get_version.outputs.version }}
      - name: Publish package
        run: |
          cd signer-npm/pkg
          npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN_PUBLISH_AUTO }}

  rust_publish:
    needs: [ build ]
    if: startsWith("filecoin_signer@")
    runs-on: ubuntu-latest
    container:
      image: zondax/rust-ci:latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: true
      - name: Restore/Save sscache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cache/sccache
          key: ${{ runner.os }}-${{ github.run_id }}-${{ needs.configure.outputs.datetime }}
      - name: Cargo publish
        run: |
          cargo publish -p filecoin-signer --allow-dirty
        env:
           CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}